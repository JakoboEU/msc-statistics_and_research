# defecation rates
cats<-as.table(rbind (c(28,48) , c(10,114)))
## try adding row names and column names to your table, see dimnames in help file example
?chisq.test
chi.cat<-chisq.test(cats) chi.cat
chi.cat<-chisq.test(cats)
chi.cat
cats
names(cats)
str(cats)
cats
dimnames(cats) <- list(method = c("Kindness", "Hose"),
defacated = c("Yes","No"))
names(cats)
cats
dimnames(cats) <- list(Defecate = c("Yes","No")), Freq = c("Kindness", "Hose"))
#####################
# Chi-squared test
#####################
# Data: Cats
# Analysis: chi-squared test
# Null Hypothesis: there is no significant association between training types and cat
# defecation rates
cats<-as.table(rbind (c(28,48) , c(10,114)))
dimnames(cats) <- list(Defecate = c("Yes","No")), Freq = c("Kindness", "Hose"))
dimnames(cats) <- list(Defecate = c("Yes","No"), Freq = c("Kindness", "Hose"))
cats
names(cats)
str(cats)
chi.cat<-chisq.test(cats)
chi.cat
?chi.cat
chi.cat$expected
cat
cats
cats
eye_colour <-as.table(rbind (c(89,375,25) , c(77,371,15)))
dimnames(eye_colour) <- list(Gender = c("Male","Female"), EyeColour = c("Blue", "Brown", "Other"))
eye_colour
chi.eye<-chisq.test(eye_colour)
chi.eye
# Pearson's Chi-squared test
# data:  eye_colour
# X-squared = 2.6808, df = 2, p-value = 0.2617
chi.eye$expected
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(MASS)
summary(survey)
head(survey)
smoking<-table(survey$Smoke,survey$Exer) # table counts each specified category to build a contingency table
smoking
chisq.test(smoking)
chi.smoking <- chisq.test(smoking)
chi.smoking
chi.smoking$expected
smoking
dimnames(convictions) <- list(Twin = c("Not Identical","Identical"), Conviction = c("Convicted", "Not Convicted"))
convictions <-as.table(rbind (c(2,15) , c(10,3)))
dimnames(convictions) <- list(Twin = c("Not Identical","Identical"), Conviction = c("Convicted", "Not Convicted"))
# Fisherâ€™s exact test
fisher.test(convictions)
moths <- read_csv('moths.csv')
# Parsed with column specification:
#  cols(
#    Location = col_character(),
#    moth_number = col_double()
#    Bait = col_character(),
#  )
summary(moths)
head(moths)
ggplot(moths, aes(Location, moth_number)) +
geom_boxplot()  +
ylab("Moth Couth")
ggplot(moths, aes(Bait, moth_number)) +
geom_boxplot()  +
ylab("Moth Couth")
ggplot(moths, aes(Bait, moth_number, fill=Location)) +
geom_boxplot()  +
ylab("Moth Couth")
ggplot(moths, aes(Location, moth_number, fill=Bait)) +
geom_boxplot()  +
ylab("Moth Couth")
## Interaction plot
interaction.plot(moths$Location, moths$Bait, moths$moth_number)
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_smooth(method = lm, se=F) +
xlab("Location") +
ylab("Moth Count")
## Interaction plot
interaction.plot(moths$Location, moths$Bait, moths$moth_number)
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_smooth(method = am, se=F) +
xlab("Location") +
ylab("Moth Count")
?interaction.plot
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_smooth(method = mean, se=F) +
xlab("Location") +
ylab("Moth Count")
?interaction.plot
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_line(method = lm, se=F) +
xlab("Location") +
ylab("Moth Count")
) +
xlab("Location") +
ylab("Moth Count")
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_line(
) +
xlab("Location") +
ylab("Moth Count")
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_line() +
xlab("Location") +
ylab("Moth Count")
## Interaction plot
interaction.plot(moths$Location, moths$Bait, moths$moth_number)
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_line() +
xlab("Location") +
ylab("Moth Count")
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_line(y=mean(moth_number)) +
xlab("Location") +
ylab("Moth Count")
geom_line(aes(y=mean(moth_number)) +
geom_line(aes(y=mean(moth_number)) +
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_line(aes(y=mean(moth_number))) +
xlab("Location") +
ylab("Moth Count")
)
)
ggplot(moths, aes(x = Location , y= moth_number , group = Bait, color = Bait)) +
geom_line(aes(y=mean(moth_number))) +
xlab("Location") +
ylab("Moth Count")
## Interaction plot
interaction.plot(moths$Location, moths$Bait, moths$moth_number)
shapiro.test(moths$Location)
shapiro.test(moths$moth_number)
# Test for homogeneity of variances
bartlett.test(moths$moth_number, moths$Location, moths$Bait) # NO significant difference in variance
bartlett.test(moths$moth_number, moths$Location)
bartlett.test(moths$moth_number, moths$Bait)
## Interaction plot
##
# Now we can make an interaction plot. There may be an interaction if all levels of bait don't respond in the same way across tree locations
interaction.plot(moths$Location, moths$Bait, moths$moth_number)
## Model with the main effects of both factors and no interaction
output1<-aov(moth_number~Location+Bait, data=moths)
summary(output1)
## Model with the main effects of both factors AND interaction
output2<-aov(moth_number~Location*Bait, data=moths)
summary(output2)
## Compare the two models
anova(output1, output2)
list.files()
exer <- read_csv('exer.csv')
# Parsed with column specification:
#   cols(
#     id = col_double(),
#     diet = col_double(),
#     exertype = col_double(),
#     pulse = col_double(),
#     time = col_double()
#   )
summar7(exer)
# Parsed with column specification:
#   cols(
#     id = col_double(),
#     diet = col_double(),
#     exertype = col_double(),
#     pulse = col_double(),
#     time = col_double()
#   )
summary(exer)
exer$id <- as.factor(exer$id)
exer$diet <- as.factor(exer$diet)
exer$time <- as.factor(exer$time)
exer$exertype <- as.factor(exer$exertype)
summary(exer)
interaction.plot(moths$time, moths$pulse, moths$diet)
interaction.plot(exer$time, exer$pulse, exer$diet)
?interaction.plot
interaction.plot(exer$time, exer$diet, exer$pulse)
## Repeated measures anova with subject id as the error i.e. the thing that gets repeatedly
# measured!
diet.aov <- aov(pulse ~ diet * time + Error(id), data = exer)
summary(diet.aov)
# Now try the same thing with time and exercise. What can you conclude?
interaction.plot(exer$time, exer$exertype, exer$pulse)
exertype.aov <- aov(pulse ~ exertype * time + Error(id), data = exer)
summary(exertype.aov)
# exercise, diet and time
attach(exer)
par(mfrow=c(1,2))
interaction.plot(time[diet==1], exertype[diet==1], pulse[diet==1],
ylim = c(80, 150), lty = c(1, 12, 8),
trace.label = "exertype", ylab = "mean of pulse", xlab = "time") title("Diet = 1")
par(mfrow=c(1,2))
interaction.plot(time[diet==1], exertype[diet==1], pulse[diet==1],
ylim = c(80, 150), lty = c(1, 12, 8),
trace.label = "exertype", ylab = "mean of pulse", xlab = "time")
title("Diet = 1")
interaction.plot(time[diet==2], exertype[diet==2], pulse[diet==2], ylim = c(80, 150), lty = c(1, 12, 8),
trace.label = "exertype", ylab = "mean of pulse", xlab = "time")
title("Diet = 2")
all.aov <- aov(pulse ~ diet ~ exertype * time + Error(id), data = exer)
all.aov <- aov(diet ~ exertype * time + Error(id), data = exer)
?aov
all.aov <- aov(pulse ~ diet * exertyp * time + Error(id), data = exer
)
all.aov <- aov(pulse ~ diet * exertyp * time + Error(id), data = exer)
all.aov <- aov(pulse ~ diet * exertype * time + Error(id), data = exer)
summary(all.aov)
attach(exer)
par(mfrow=c(1,2))
interaction.plot(time[diet==1], exertype[diet==1], pulse[diet==1],
ylim = c(80, 150), lty = c(1, 12, 8),
trace.label = "exertype", ylab = "mean of pulse", xlab = "time")
title("Diet = 1")
interaction.plot(time[diet==2], exertype[diet==2], pulse[diet==2], ylim = c(80, 150), lty = c(1, 12, 8),
trace.label = "exertype", ylab = "mean of pulse", xlab = "time")
title("Diet = 2")
# clear r console
rm(list=ls())
# set working directory
setwd("/Users/jamese.richardson/Projects/Masters/statistics_and_research/practice3")
# list files in working directory
list.files()
# Load required libaries
library(tidyverse)
library(ggplot2)
#
# Load the enrichment data
enrichments_data <- read_csv("enrich.csv")
# Examine the data
names(enrichments_data)
str(enrichments_data)
factors(enrichments_data$type)
as.factor(enrichment_data$type)
as.factor(enrichments_data$type)
as.factor(enrichments_data$pacing)
# check the mean and standard deviation pacing time (minutes) between enrichment types
tapply(enrichments_data$pacing, enrichments_data$type, FUN=mean)
# enrich1 enrich2 enrich3
# 21.6125 30.4000 27.3250
tapply(enrichments_data$pacing, enrichments_data$type, FUN=sd)
# Look at box plot comparison between enrichment types
ggplot(enrichments_data, aes(x=type, y=packing, group=type)) +
geom_boxplot() +
xlab("Enrichment Type") + ylab("Pacing Time (minutes)")
# Look at box plot comparison between enrichment types
ggplot(enrichments_data, aes(x=type, y=pacing, group=type)) +
geom_boxplot() +
xlab("Enrichment Type") + ylab("Pacing Time (minutes)")
# Examine distribution of pacing time
ggplot(enrichments_data, aes(x = pacing, fill=type)) +
geom_bar(binwidth = 2)+
facet_wrap(~type, ncol=1) +
xlab("Pacing Time (minutes)") + ylab("Enrichment Type")
# Examine distribution of pacing time
ggplot(enrichments_data, aes(x = pacing, fill=type)) +
geom_bar(binwidth = 2)+
facet_wrap(~type, ncol=1) +
xlab("Pacing Time (minutes)") + ylab("Number of Lions")
# Examine distribution of pacing time
ggplot(enrichments_data, aes(x = pacing, fill=type)) +
geom_bar(binwidth = 1)+
facet_wrap(~type, ncol=1) +
xlab("Pacing Time (minutes)") + ylab("Number of Lions")
# Examine distribution of pacing time
ggplot(enrichments_data, aes(x = pacing, fill=type)) +
geom_bar(binwidth = 5)+
facet_wrap(~type, ncol=1) +
xlab("Pacing Time (minutes)") + ylab("Number of Lions")
# Test for normality
shapiro.test(enrichments_data$pacing)
# Now we need to examine the test assumptions for the ANOVA, which are the same we looked at earlier for t-tests
# 1. The data are continuous
# 2. At least approximately normally distributed
# 3. The variances of the groups are homogenous
# Test for normality
shapiro.test(iris$Sepal.Width) # NOT significantly different from normal
# Test for homogeneity of variances
bartlett.test(enrichments_data$pacing, enrichments_data$type) # NO significant difference in variance
# ---------------------------
# Do the One-way ANOVA test:
# ---------------------------
anova1<-aov(pacing~type, data=enrichments_data)
summary(anova1)
library(multcomp)
cld(glht(anova1, linfct=mcp(Species="Tukey")))
anova1<-aov(pacing~type, data=enrichments_data)
summary(anova1)
# So there is a difference, but we need to find out which group is different
# Use Tukey post hoc test
cld(glht(anova1, linfct=mcp(type="Tukey")))
# -----------------
names(enrichments_data) # [1] "pacing" "type"
str(enrichments_data)
# How are the encrichments described?
as.factor(enrichments_data$type) # Levels: enrich1 enrich2 enrich3
# Convert types to factor
enrichments_data$type <- as.factor(enrichments_data$type)
# check the mean and standard deviation pacing time (minutes) between enrichment types
tapply(enrichments_data$pacing, enrichments_data$type, FUN=mean)
# enrich1 enrich2 enrich3
# 21.6125 30.4000 27.3250
tapply(enrichments_data$pacing, enrichments_data$type, FUN=sd)
# Look at box plot comparison between enrichment types
ggplot(enrichments_data, aes(x=type, y=pacing, group=type)) +
geom_boxplot() +
xlab("Enrichment Type") + ylab("Pacing Time (minutes)")
# Examine distribution of pacing time
ggplot(enrichments_data, aes(x = pacing, fill=type)) +
geom_bar(binwidth = 5)+
facet_wrap(~type, ncol=1) +
xlab("Pacing Time (minutes)") + ylab("Number of Lions")
# Difference between one continuous variable (pacing time) and one categorical variable (enrichment type).
# Three groups of categorical data (enrich1 enrich2 enrich3)
# Is the data normal?
##
# Test for normality
shapiro.test(enrichments_data$pacing)
# Are the variances of the groups homogenous?
##
# Test for homogeneity of variances
bartlett.test(enrichments_data$pacing, enrichments_data$type)
# -------------------------
# Do the tests:
# -------------------------
anova1<-aov(pacing~type, data=enrichments_data)
summary(anova1)
# So there is a difference, but we need to find out which group is different
# Use Tukey post hoc test
cld(glht(anova1, linfct=mcp(type="Tukey")))
# check the mean and standard deviation pacing time (minutes) between enrichment types
tapply(enrichments_data$pacing, enrichments_data$type, FUN=mean)
# enrich1 enrich2 enrich3
# 21.6125 30.4000 27.3250
tapply(enrichments_data$pacing, enrichments_data$type, FUN=sd)
head(enrichments_data)
## Summarizes data.
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
enrich.summary <- summarySE(enrichments_data, measurevar="pacing", groupvars=c("type"))
enrich.summary
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacingh+ci), width=.1) + geom_point() +
scale_y_continuous(name="Pacing Time (minutes)") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") + annotate("text", x = 3, y = 3.1, label = "b") + theme_bw()
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci), width=.1) + geom_point() +
scale_y_continuous(name="Pacing Time (minutes)") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") + annotate("text", x = 3, y = 3.1, label = "b") + theme_bw()
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci), width=.1) + geom_point() +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
theme_bw()
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci), width=.1) +
geom_point() +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
labs(title = "Differences in Pacing Behaviour of Lions based on Enrichment Treatment") +
theme_bw()
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci), width=.1) +
geom_point() +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment") +
theme_bw()
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci), width=.1) +
geom_point() +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment", subtitle = "(a) signicantly different to (b)") +
theme_bw()
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci), width=.1) +
geom_point() +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment", subtitle = "(a) signicantly different to (b)")
enrich.summary
enrich.summary$group <- c('a','b','b')
enrich.summary
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci, color=group), width=.1) +
geom_point(aes(color=group)) +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment", subtitle = "(a) signicantly different to (b)")
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci, color=group), width=.1) +
geom_point(aes(color=group)) +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment", subtitle = "Treatment group (a) signicantly different to treatment group (b)")
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci, color=group), width=.1) +
geom_point(aes(color=group)) +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment",
subtitle = "Treatment group (a) signicantly different to treatment group (b)")
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci, color=group), width=.1) +
geom_point(aes(color=group)) +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
annotate("text", x = 1, y = 3.6, label = "a") +
annotate("text", x = 2, y = 2.9, label = "b") +
annotate("text", x = 3, y = 3.1, label = "b") +
guides(color=guide_legend(title="Treatment Group")) +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment",
subtitle = "Treatment group (a) signicantly different to treatment group (b)")
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci, color=group), width=.1) +
geom_point(aes(color=group)) +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
guides(color=guide_legend(title="Treatment Group")) +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment",
subtitle = "Treatment group (a) signicantly different to treatment group (b)")
# Create summary of data
enrich.summary <- summarySE(enrichments_data, measurevar="pacing", groupvars=c("type"))
enrich.summary$group <- c('a','b','b')
enrich.summary
# Plot Result
ggplot(enrich.summary, aes(x=type, y=pacing)) +
geom_errorbar(aes(ymin=pacing-ci, ymax=pacing+ci, color=group), width=.1) +
geom_point(aes(color=group)) +
scale_y_continuous(name="Pacing Time (minutes)") +
scale_x_discrete(name = "Encrichment Type") +
guides(color=guide_legend(title="Treatment Group")) +
labs(title = "Pacing Behaviour of Lions based on Enrichment Treatment",
subtitle = "Treatment group (a) signicantly different to treatment group (b)")
